<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术规范 | Echo-SIT</title><link>https://Echo-SIT.github.io/tag/%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83/</link><atom:link href="https://Echo-SIT.github.io/tag/%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83/index.xml" rel="self" type="application/rss+xml"/><description>技术规范</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>zh-CN</language><lastBuildDate>Wed, 24 Sep 2025 00:00:00 +0000</lastBuildDate><image><url>https://Echo-SIT.github.io/media/logo.svg</url><title>技术规范</title><link>https://Echo-SIT.github.io/tag/%E6%8A%80%E6%9C%AF%E8%A7%84%E8%8C%83/</link></image><item><title>Git Commit规范</title><link>https://Echo-SIT.github.io/blog/gitcommit/</link><pubDate>Wed, 24 Sep 2025 00:00:00 +0000</pubDate><guid>https://Echo-SIT.github.io/blog/gitcommit/</guid><description>&lt;h1 id="基本介绍"&gt;基本介绍&lt;/h1&gt;
&lt;p&gt;在使用Git进行代码仓库管理的时候，我们不可避免需要提交Commit，即每次提交代码需要标注本次进行了哪些修改，方便让合作者快速阅览了解开发内容，提高合作效率。目前Angular规范是最广泛的Git Commit规范方法，本文参考下列文档，使用中文编写新手友好的实用教程。
&lt;/p&gt;
&lt;h1 id="规范内容"&gt;规范内容&lt;/h1&gt;
&lt;h2 id="commit信息格式"&gt;Commit信息格式&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;BLANK LINE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;BLANK LINE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;footer&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中type(提交类型)和subject(简短描述)是必须项，scope(影响范围)是可选项
第一行为Header(标题)，第二部分为Body(正文)，最后部分为Footer(脚注)
一般实际开发中主要遵循标题规范，即 type(scope): subject，示例如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;feat(第二课堂): 显示第二课堂学分
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;fix(第二课堂): 修复第二课堂学分显示问题
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docs: Readme中增加新人环境配置教程
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;test: 教务系统API单元测试
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="type-提交类型"&gt;Type (提交类型)&lt;/h2&gt;
&lt;p&gt;常用的Type类型如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;feat: 新功能&lt;/li&gt;
&lt;li&gt;fix: 修复 bug&lt;/li&gt;
&lt;li&gt;docs: 文档修改&lt;/li&gt;
&lt;li&gt;style: 不影响代码逻辑的格式调整&lt;/li&gt;
&lt;li&gt;refactor: 既不是新功能也不是修复 bug 的代码重构&lt;/li&gt;
&lt;li&gt;perf: 性能优化&lt;/li&gt;
&lt;li&gt;test: 添加或修改测试代码&lt;/li&gt;
&lt;li&gt;chore: 构建过程或辅助工具的变动&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="scope-影响范围"&gt;Scope (影响范围)&lt;/h2&gt;
&lt;p&gt;指定提交影响的模块或文件范围，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第二课堂&lt;/li&gt;
&lt;li&gt;教务系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="subject-简短描述"&gt;Subject (简短描述)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;建议使用中文&lt;/li&gt;
&lt;li&gt;简单描述修改内容，使用陈述句，例如&amp;quot;修复了xx问题&amp;quot;&lt;/li&gt;
&lt;li&gt;结尾不要使用句号或者其他标点符号&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="规范git-commit工具"&gt;规范Git Commit工具&lt;/h1&gt;
&lt;p&gt;使用VSCode的用户可以安装&lt;strong&gt;git-commit-plugin&lt;/strong&gt;插件，使用效果如下：
&lt;figure&gt;&lt;img src="https://Echo-SIT.github.io/blog/gitcommit/image.png" width="400" height="460"&gt;
&lt;/figure&gt;
&lt;/p&gt;</description></item></channel></rss>